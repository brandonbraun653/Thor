import lib/CommonTools/boost-build/features/thor ;
import lib/CommonTools/boost-build/features/freertos ;

# ====================================================
# Local Rules 
# ====================================================
local rule explicit_alias ( name : sources * : requirements * : default-build * : usage-requirements * )
    {
    alias $(name) : $(sources) : $(requirements) : $(default-build) : $(usage-requirements) ;
    explicit $(name) ;
    }

# ====================================================
# Local Resources 
# ====================================================
# ------------------------------------------
# Build Target Specific Options 
# ------------------------------------------
local thor_dbg_defs = DEBUG ;
local thor_dbg_cflags = -ggdb -Og ;

local thor_rel_defs = NDEBUG ;
local thor_rel_cflags = -O3 ;

# ------------------------------------------
# CXXFlags
# ------------------------------------------
# Applies to all Thor targets, but not propagated to dependents.
local thor_requirements_cxxflags = 
    -fno-common
    -fmessage-length=0
    -fno-exceptions
    -ffunction-sections
    -fdata-sections
    -Wall
    ;

# Applies to all Thor targets and IS propagated to dependents.
local thor_usage_requirements_cxxflags =
    -fno-exceptions
    ;

local all_thor_cxxflags = 
    $(thor_requirements_cxxflags)
    $(thor_usage_requirements_cxxflags)
    ;

# ------------------------------------------
# Link Flags
# ------------------------------------------
# Applies to all Thor targets, but not propagated to dependents.
local thor_requirements_link_flags =
    ;

# Applies to all Thor targets and IS propagated to dependents.
local thor_usage_requirements_link_flags =
    ;

local all_thor_link_flags =
    $(thor_requirements_link_flags)
    $(thor_usage_requirements_link_flags)
    ;

# ------------------------------------------
# Source/Include Directories 
# ------------------------------------------
local thor_inc_dir = . ;
local thor_hdr_dir = Thor ; 
local thor_src_dir = Thor ;

# ------------------------------------------
# Source Files
# ------------------------------------------
thor_src = [ glob $(thor_src_dir)/*.cpp ] ;
freertos_hooks = $(thor_src_dir)/config/freertos/freertos_hooks_prj.cpp ;

# ====================================================
# Project Definition
# ====================================================
project Thor : usage-requirements <include>$(thor_inc_dir) ;

# ====================================================
# Private Thor Library Components (only used locally)
# ====================================================
# ------------------------------------------
# Pulls in necessary headers for Thor to compile with FreeRTOS
# -----------------------------------------
explicit_alias _RTOS : : <FreeRTOS>enabled : 
    :   <define>USING_FREERTOS
        <use>/FreeRTOS//PUB         # FreeRTOS headers
        <use>/PRJ//FREERTOS_CFG     # FreeRTOSConfig.h
    ;

# ------------------------------------------
# Pulls in necessary headers for Thor to compile with Chimera
# -----------------------------------------
explicit_alias _CHIMERA : : <Chimera>enabled :
    :   <define>USING_CHIMERA
        <use>/CHIMERA//PUB          # Chimera Headers
    ;

# ====================================================
# Public Thor Library Components
# ====================================================
# ------------------------------------------
# Includes all common Thor headers
# -----------------------------------------
explicit_alias PUB : : : 
    :   <include>$(thor_inc_dir)
        <Thor>enabled-F4:<use>/STM32F4//PUB
        <Thor>enabled-F7:<use>/STM32F7//PUB 
    ;

# ------------------------------------------
# Includes the Thor variant of chimeraPort.hpp
# -----------------------------------------
explicit_alias CHIMERA_PORT : : :
    :   <include>$(thor_hdr_dir)/config/chimera
        <define>CHIMERA_LITTLE_ENDIAN
    ;

# ====================================================
# Thor STM32F4 Targets
# ====================================================
# -----------------------------------------
# STM32F4 Target Without FreeRTOS
# -----------------------------------------
lib CORE
    :   $(thor_src)

    :   <Thor>enabled-F4
        <FreeRTOS>disabled
        <include>$(thor_inc_dir)
        <cxxflags>$(thor_requirements_cxxflags)
        <define>BOOST_NO_EXCEPTIONS
        <define>USE_FULL_LL_DRIVER

        <library>/STM32F4//HAL_DRIVER
        <library>/STM32F4//LL_DRIVER

        <use>_CHIMERA
        <use>PUB
        <use>/STM32F4//PUB
        <use>/STM32F4//ALIAS_MCU_OPTIONS
        <use>/PRJ//BOOST                            # User defined alias to boost include dir
    :
    :   <use>/STM32F4//ALIAS_MCU_OPTIONS            # Propagates compiler settings to user
    ;   

# -----------------------------------------
# STM32F4 Target With FreeRTOS
# -----------------------------------------
lib CORE
    :   $(thor_src)
        $(freertos_hooks)

    :   <Thor>enabled-F4
        <FreeRTOS>enabled
        <include>$(thor_inc_dir)
        <cxxflags>$(thor_requirements_cxxflags)
        <define>BOOST_NO_EXCEPTIONS
        <define>USE_FULL_LL_DRIVER

        <library>/STM32F4//HAL_DRIVER
        <library>/STM32F4//LL_DRIVER
        <library>/FREERTOS//CORE

        <use>_CHIMERA
        <use>_RTOS
        <use>PUB
        <use>/STM32F4//PUB
        <use>/STM32F4//ALIAS_MCU_OPTIONS
        <use>/PRJ//BOOST                            # User defined alias to boost include dir
    :
    :   <use>/STM32F4//ALIAS_MCU_OPTIONS            # Propagates compiler settings to user
    ; 

# -----------------------------------------
# STM32F4 Public Headers
# -----------------------------------------
alias TARGET_PROPAGATED_OPTIONS
    : 
    :   <Thor>enabled-F4
    :
    :   <use>PUB
        <use>/PRJ//BOOST
        <use>/STM32F4//ALIAS_MCU_OPTIONS

        <define>BOOST_NO_EXCEPTIONS                 # Exceptions are not needed for Thor code
        <define>USE_FULL_LL_DRIVER                  # Required for Thor to operate correctly with STM32 HAl. Some drivers are based on it.
        <cxxflags>$(thor_usage_requirements_cxxflags)
    ;

explicit CORE ;                                     # Core library
explicit TARGET_PROPAGATED_OPTIONS ;                # Thor chip specific options that should be propagated to all targets using Thor
