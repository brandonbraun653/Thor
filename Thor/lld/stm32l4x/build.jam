# ====================================================
# Local Rules
# ====================================================
local rule explicit_alias ( name : sources * : requirements * : default-build * : usage-requirements * )
  {
  alias $(name) : $(sources) : $(requirements) : $(default-build) : $(usage-requirements) ;
  explicit $(name) ;
  }

# ====================================================
# Local Resources
# ====================================================
# ------------------------------------------
# Build Target Specific Options
# ------------------------------------------
local l4_dbg_defs = DEBUG ;
local l4_dbg_cflags = -ggdb -Og ;

local l4_rel_defs = NDEBUG ;
local l4_rel_cflags = -O3 ;

# ------------------------------------------
# Generic STM32L4 Family CFlags
# ------------------------------------------
# Applies to all L4 targets, but not propagated to dependents.
local lib_only_cflags =
  -fno-common
  -fmessage-length=0
  -fno-exceptions
  -ffunction-sections
  -fdata-sections
  -Wall
  --std=gnu11
  ;

local lib_only_cxxflags =
  -fno-common
  -fmessage-length=0
  -fno-exceptions
  -ffunction-sections
  -fdata-sections
  -Wall
  --std=gnu++2a
  ;

# Assumes all devices are Cortex-M4 processors with HW FPU.
# Will be propagated to dependents
local propagated_cflags =
  -mfloat-abi=hard
  -mcpu=cortex-m4
  -mthumb
  -ffunction-sections
  -fdata-sections
  ;

local propagated_cxxflags =
  -mfloat-abi=hard
  -mcpu=cortex-m4
  -mthumb
  -ffunction-sections
  -fdata-sections
  ;

# ------------------------------------------
# Generic STM32L4 Family Linker Flags
# ------------------------------------------
# Applies to all L4 targets, but not propagated to dependents.
local lib_only_link_flags =
  -mthumb
  -mabi=aapcs
  ;

# Assumes all devices are Cortex-M4 processors with HW FPU.
# Will be propagated to dependents.
local propagated_link_flags =
  -mfloat-abi=hard
  -mcpu=cortex-m4
  -specs=nano.specs
  -specs=nosys.specs
  -Wl,--gc-sections

  ;

use-project /THOR/LLD/STM32L4/DES : des ;
# use-project /THOR/LLD/STM32L4/DMA   : dma ;
use-project /THOR/LLD/STM32L4/FLASH : flash ;
use-project /THOR/LLD/STM32L4/GPIO  : gpio ;
use-project /THOR/LLD/STM32L4/INTERRUPT  : interrupt ;
# use-project /THOR/LLD/STM32L4/IWDG  : iwdg ;
use-project /THOR/LLD/STM32L4/POWER : power ;
use-project /THOR/LLD/STM32L4/RCC   : rcc ;
use-project /THOR/LLD/STM32L4/SPI   : spi ;
use-project /THOR/LLD/STM32L4/STARTUP : startup ;
use-project /THOR/LLD/STM32L4/SYSTEM   : system ;
use-project /THOR/LLD/STM32L4/TIMER : timer ;
# use-project /THOR/LLD/STM32L4/UART  : uart ;
use-project /THOR/LLD/STM32L4/USART : usart ;
# use-project /THOR/LLD/STM32L4/WWDG  : wwdg ;

# ====================================================
# Figures out what device we are actually compiling for. By default it will
# propagate MCU specific defines/cflags/linkflags in the usage-requirements
# field. This is how so many chip variants are supported without much effort.
# ====================================================
alias BUILD_FLAGS
  :
  : <variant>debug
  :
  : <cflags>$(l4_dbg_cflags)
    <cxxflags>$(l4_dbg_cflags)
  ;

alias BUILD_FLAGS
  :
  : <variant>release
  :
  : <cflags>$(l4_rel_cflags)
    <cxxflags>$(l4_rel_cflags)
  ;

explicit BUILD_FLAGS ;


alias ALIAS_MCU_OPTIONS
  :
  : <Thor>enabled-L432
    <Thor>enabled-KC
  :
  # Expect all these to be propagated to all projects
  : <define>STM32L432xx
    <define>STM32L432KC
    <define>EMBEDDED
    <define>CHIMERA_LITTLE_ENDIAN
    <define>TARGET_STM32L4
    <cflags>$(propagated_cflags)
    <cxxflags>$(propagated_cxxflags)
    <linkflags>$(propagated_link_flags)
    <cflags>-mfpu=fpv4-sp-d16
    <cxxflags>-mfpu=fpv4-sp-d16
    <linkflags>-mfpu=fpv4-sp-d16
    <use>/PRJ//LINKER_SCRIPT
    <use>BUILD_FLAGS
  ;

alias ALIAS_MCU_OPTIONS
  :
  : <Thor>enabled-L432
    <Thor>enabled-KB
  :
  # Expect all these to be propagated to all projects
  : <define>STM32L432xx
    <define>STM32L432KB
    <define>EMBEDDED
    <define>CHIMERA_LITTLE_ENDIAN
    <define>TARGET_STM32L4
    <cflags>$(propagated_cflags)
    <cxxflags>$(propagated_cxxflags)
    <linkflags>$(propagated_link_flags)
    <cflags>-mfpu=fpv4-sp-d16
    <cxxflags>-mfpu=fpv4-sp-d16
    <linkflags>-mfpu=fpv4-sp-d16
    <use>/PRJ//LINKER_SCRIPT
    <use>BUILD_FLAGS
  ;

alias ALIAS_MCU_OPTIONS
  :
  : <Thor>enabled-L432
    <Thor>enabled-SIM
  :
  : <define>STM32L432xx
    <define>_SIM
    <define>CHIMERA_LITTLE_ENDIAN
    <define>TARGET_STM32L4
  ;

explicit ALIAS_MCU_OPTIONS ;

# ====================================================
# Chip specific startup file needed to power up the processor
# ====================================================
lib LIB_TARGET_STARTUP
  : startup/hw_startup_stm32l432xx.c

  : <Thor>enabled-L432
    <link>static
    <cflags>$(lib_only_cflags)
    <define>DEBUG_DEFAULT_INTERRUPT_HANDLERS
    <use>ALIAS_MCU_OPTIONS
  ;

explicit LIB_TARGET_STARTUP ;


# ====================================================
# STM32L4x Testing Components
# ====================================================
# Common definitions needed across all testing executables
explicit_alias TEST_PUB : : : :
  <define>THOR_LLD_TEST
  ;

# Common libraries needed across nearly all LLD testing executables
# explicit_alias TEST_LIB : : : :
#   <library>/GOOGLE//gtest
#   <library>/THOR/LLD/STM32L4/DMA//LIB
#   <library>/THOR/LLD/STM32L4/FLASH//LIB
#   <library>/THOR/LLD/STM32L4/GPIO//LIB
#   <library>/THOR/LLD/STM32L4/IWDG//LIB
#   <library>/THOR/LLD/STM32L4/POWER//LIB
#   <library>/THOR/LLD/STM32L4/RCC//LIB
#   <library>/THOR/LLD/STM32L4/SPI//LIB
#   <library>/THOR/LLD/STM32L4/TIMER//LIB
#   <library>/THOR/LLD/STM32L4/UART//LIB
#   <library>/THOR/LLD/STM32L4/USART//LIB
#   <library>/THOR/LLD/STM32L4/WWDG//LIB
#   ;


# ====================================================
# Public Components
# ====================================================
explicit_alias PUB : : : : <define>TARGET_STM32L4 ;

explicit_alias CHECK_COMPILE :
  LIB_TARGET_STARTUP
  /THOR/LLD/CMN/CM4//LIB
  /THOR/LLD/STM32L4/DES//LIB
  /THOR/LLD/STM32L4/FLASH//LIB
  /THOR/LLD/STM32L4/GPIO//LIB
  /THOR/LLD/STM32L4/INTERRUPT//LIB
  /THOR/LLD/STM32L4/POWER//LIB
  /THOR/LLD/STM32L4/RCC//LIB
  /THOR/LLD/STM32L4/SPI//LIB
  /THOR/LLD/STM32L4/SYSTEM//LIB
  /THOR/LLD/STM32L4/TIMER//LIB
  /THOR/LLD/STM32L4/USART//LIB
  ;

# explicit_alias INSTALL_ALL_LIB :
#   /THOR/LLD/STM32L4/DMA//INSTALL_LIB
#   /THOR/LLD/STM32L4/FLASH//INSTALL_LIB
#   /THOR/LLD/STM32L4/GPIO//INSTALL_LIB
#   /THOR/LLD/STM32L4/IWDG//INSTALL_LIB
#   /THOR/LLD/STM32L4/NVIC//INSTALL_LIB
#   /THOR/LLD/STM32L4/POWER//INSTALL_LIB
#   /THOR/LLD/STM32L4/RCC//INSTALL_LIB
#   /THOR/LLD/STM32L4/SPI//INSTALL_LIB
#   /THOR/LLD/STM32L4/TIMER//INSTALL_LIB
#   /THOR/LLD/STM32L4/UART//INSTALL_LIB
#   /THOR/LLD/STM32L4/USART//INSTALL_LIB
#   /THOR/LLD/STM32L4/WWDG//INSTALL_LIB
#   /THOR/LLD/STM32L4/IWDG//INSTALL_LIB
#   ;

# explicit_alias INSTALL_ALL_TST :
#   /THOR/LLD/STM32L4/DMA//INSTALL_TEST
#   /THOR/LLD/STM32L4/FLASH//INSTALL_TEST
#   /THOR/LLD/STM32L4/GPIO//INSTALL_TEST
#   /THOR/LLD/STM32L4/IWDG//INSTALL_TEST
#   /THOR/LLD/STM32L4/NVIC//INSTALL_TEST
#   /THOR/LLD/STM32L4/POWER//INSTALL_TEST
#   /THOR/LLD/STM32L4/RCC//INSTALL_TEST
#   /THOR/LLD/STM32L4/SPI//INSTALL_TEST
#   /THOR/LLD/STM32L4/TIMER//INSTALL_TEST
#   /THOR/LLD/STM32L4/UART//INSTALL_TEST
#   /THOR/LLD/STM32L4/USART//INSTALL_TEST
#   /THOR/LLD/STM32L4/WWDG//INSTALL_TEST
#   /THOR/LLD/STM32L4/IWDG//INSTALL_TEST
#   ;