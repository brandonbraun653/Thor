# ====================================================
# Local Rules 
# ====================================================
local rule explicit_alias ( name : sources * : requirements * : default-build * : usage-requirements * )
  {
  alias $(name) : $(sources) : $(requirements) : $(default-build) : $(usage-requirements) ;
  explicit $(name) ;
  }

# ====================================================
# Local Resources 
# ====================================================
# ------------------------------------------
# Build Target Specific Options 
# ------------------------------------------
local f4_dbg_defs = DEBUG ;
local f4_dbg_cflags = -ggdb -Og ;

local f4_rel_defs = NDEBUG ;
local f4_rel_cflags = -O3 ;

# ------------------------------------------
# Generic STM32F4 Family CFlags
# ------------------------------------------
# Applies to all F4 targets, but not propagated to dependents.
local lib_only_cflags = 
  -fno-common
  -fmessage-length=0
  -fno-exceptions
  -ffunction-sections
  -fdata-sections
  -Wall
  --std=gnu11
  ;

local lib_only_cxxflags = 
  -fno-common
  -fmessage-length=0
  -fno-exceptions
  -ffunction-sections
  -fdata-sections
  -Wall
  --std=gnu++2a
  ;

# Assumes all devices are Cortex-M4 processors with HW FPU.
# Will be propagated to dependents
local propagated_cflags = 
  -mfloat-abi=hard
  -mcpu=cortex-m4
  -mthumb
  ;

local propagated_cxxflags = 
  -mfloat-abi=hard
  -mcpu=cortex-m4
  -mthumb
  ;

# ------------------------------------------
# Generic STM32F4 Family Linker Flags
# ------------------------------------------
# Applies to all F4 targets, but not propagated to dependents.
local lib_only_link_flags = 
  -mthumb 
  -mabi=aapcs 
  ;

# Assumes all devices are Cortex-M4 processors with HW FPU.
# Will be propagated to dependents.
local propagated_link_flags = 
  -mfloat-abi=hard 
  -mcpu=cortex-m4
  -specs=nano.specs 
  -specs=nosys.specs
  --gc-sections
  ;

use-project /THOR/LLD/STM32F4/DMA   : dma ;
use-project /THOR/LLD/STM32F4/FLASH : flash ;
use-project /THOR/LLD/STM32F4/GPIO  : gpio ;
use-project /THOR/LLD/STM32F4/NVIC  : nvic ;
use-project /THOR/LLD/STM32F4/POWER : power ;
use-project /THOR/LLD/STM32F4/RCC   : rcc ;
use-project /THOR/LLD/STM32F4/SPI   : spi ;
use-project /THOR/LLD/STM32F4/UART  : uart ;
use-project /THOR/LLD/STM32F4/USART : usart ;
use-project /THOR/LLD/STM32F4/WWDG  : wwdg ;

# ====================================================
# Figures out what device we are actually compiling for. By default it will
# propagate MCU specific defines/cflags/linkflags in the usage-requirements 
# field. This is how so many chip variants are supported without much effort.
# ====================================================
alias ALIAS_MCU_OPTIONS 
  : 
  : <Thor>enabled-F446
    <Thor>enabled-RE
  :
  # Expect all these to be propagated to all projects
  : <define>STM32F446xx              
    <define>EMBEDDED       
    <define>CHIMERA_LITTLE_ENDIAN
    <define>TARGET_STM32F4
    <cflags>$(propagated_cflags)                                   
    <cxxflags>$(propagated_cxxflags)   
    <linkflags>$(propagated_link_flags)
    <cflags>-mfpu=fpv4-sp-d16        
    <cxxflags>-mfpu=fpv4-sp-d16
    <linkflags>-mfpu=fpv4-sp-d16
    <linkflags>-T"linker/STM32F446RE_flash.lds"
  ;

alias ALIAS_MCU_OPTIONS
  :
  : <Thor>enabled-F446
    <Thor>enabled-SIM
  : 
  : <define>STM32F446xx
    <define>_SIM
    <define>CHIMERA_LITTLE_ENDIAN
    <define>TARGET_STM32F4
  ;

explicit ALIAS_MCU_OPTIONS ;

# ====================================================
# Chip specific startup file needed to power up the processor
# ====================================================
lib LIB_TARGET_STARTUP 
  : startup/startup_stm32f446xx.c
  
  : <Thor>enabled-F446
    <link>static
    <cflags>$(lib_only_cflags)
    <define>DEBUG_DEFAULT_INTERRUPT_HANDLERS
    <use>ALIAS_MCU_OPTIONS 
  ;
    
explicit LIB_TARGET_STARTUP ;


# ====================================================
# Public Components 
# ====================================================
explicit_alias PUB : : : : <define>TARGET_STM32F4 ;

explicit_alias INSTALL_ALL_LIB : 
  /THOR/LLD/STM32F4/DMA//INSTALL_LIB
  /THOR/LLD/STM32F4/FLASH//INSTALL_LIB
  /THOR/LLD/STM32F4/GPIO//INSTALL_LIB
  /THOR/LLD/STM32F4/NVIC//INSTALL_LIB
  /THOR/LLD/STM32F4/POWER//INSTALL_LIB
  /THOR/LLD/STM32F4/RCC//INSTALL_LIB
  /THOR/LLD/STM32F4/SPI//INSTALL_LIB
  /THOR/LLD/STM32F4/UART//INSTALL_LIB 
  /THOR/LLD/STM32F4/USART//INSTALL_LIB 
  /THOR/LLD/STM32F4/WWDG//INSTALL_LIB
  ;

explicit_alias INSTALL_ALL_TST : 
  /THOR/LLD/STM32F4/DMA//INSTALL_TEST
  /THOR/LLD/STM32F4/FLASH//INSTALL_TEST
  /THOR/LLD/STM32F4/GPIO//INSTALL_TEST
  /THOR/LLD/STM32F4/NVIC//INSTALL_TEST
  /THOR/LLD/STM32F4/POWER//INSTALL_TEST
  /THOR/LLD/STM32F4/RCC//INSTALL_TEST
  /THOR/LLD/STM32F4/SPI//INSTALL_TEST
  /THOR/LLD/STM32F4/UART//INSTALL_TEST
  /THOR/LLD/STM32F4/USART//INSTALL_TEST
  /THOR/LLD/STM32F4/WWDG//INSTALL_TEST
  ;